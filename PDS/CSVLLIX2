//ASSMBLE EXEC ASMHCL,
//     PARM.L='RENT,XREF,LIST,MAP'
//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR
//       DD  DSN=SYS1.AMODGEN,DISP=SHR
//C.SYSIN DD *
         TITLE 'CSVLLIX2 - LLA MODULE STAGING INSTALLATION EXIT'
CSVLLIX2 CSECT
         EJECT
***********************************************************************
* STANDARD ENTRY LINKAGE TO LLA STAGING INSTALLATION EXIT.            *
***********************************************************************
CSVLLIX2 AMODE 31
CSVLLIX2 RMODE ANY
         USING *,R15
         MODID
         STM   R14,R12,12(R13)         SAVE ENTRY REGISTERS.
         LR    R11,R15                 INITIALIZE CODE REGISTER.
         DROP  R15                     DROP TEMPORARY ADDRESSABILITY.
         USING CSVLLIX2,R11            ESTABLISH R11 AS CODE REGISTER.
         LR    R2,R1                   SET UP PARM ADDRESSABILITY
         USING LLP2,R2                 ADDRESSABILITY TO LLP2.
***********************************************************************
* TEST FOR WORKAREA, GET ONE IF FIRST ENTRY                           *
***********************************************************************
         L     R6,LLP2USER             POINTER TO OUR FULLWORD
         L     R6,0(R6)                ADDR OF OUR WORKAREA.
         LTR   R6,R6
         BNZ   MAIN                    NONZERO, ALREADY GOT AREA
         L     R0,GETMLEN              GETMAIN LENGTH
         GETMAIN RU,LV=(0)             GET SOME STORAGE
         L     R6,LLP2USER             POINTER TO OUR FULLWORD
         ST    R1,0(R6)                SAVE WORKAREA ADDRESS
*
         LR    R6,R1                   ADDRESS HEADER
         USING STATHDR,R6              ADDRESSABILITY TO HEADER
         MVC   TOTCALL,=F'0'           FORMAT HEADER
         ZAP   LSTDATE,=PL1'0'         ZERO DATE
         ZAP   LSTTIME,=PL1'0'         ZERO TIME
         ST    R6,WORK1                SAVE FOR UNPK
         MVC   STATMSG(MSG1LEN),WTOMSG1
         UNPK  STATMSG+31(9),WORK1(5)  TRANSLATE ADDR TO DISPLAY
         TR    STATMSG+31(8),TBL
         MVI   STATMSG+39,C' '
         LA    R1,STATMSG
         WTO   MF=(E,(1))              SHOW STAT AREA ADDRESS
*
         LA    R3,NUMDSNS              LOAD COUNTER
         LA    R7,HDRLEN(R6)           ADDRESS 1ST DSN
         USING STATDSN,R7
FMTDSN   EQU   *
         MVI   DSNAME,C' '            FORMAT DSN AREA
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         MVC   DSNFTCH,=F'0'
         MVC   DSNLLA,=F'0'
*
         LA    R4,NUMMODS              LOAD COUNTER
         LA    R8,DSNLEN(R7)           ADDRESS 1ST MOD
         USING STATMOD,R8
FMTMOD   EQU   *
         MVI   MODNAME,C' '            FORMAT DSN AREA
         MVC   MODNAME+1(L'MODNAME-1),MODNAME
         MVC   MODFTCH,=F'0'
         MVC   MODLLA,=F'0'
         LA    R8,MODLEN(R8)           POINT NEXT AREA
         BCT   R4,FMTMOD               LOOP BACK FOR ANOTHER MOD
*
         LR    R7,R8                   R8 POINTS START NEXT DSN
         BCT   R3,FMTDSN               LOOP BACK FOR ANOTHER MOD
         EJECT
***********************************************************************
* PROCESS STATISTICS FOR THIS INVOCATION                              *
***********************************************************************
MAIN     EQU    *
         LA    R1,1
         A     R1,TOTCALL              UPDATE NUMBER INVOCATIONS
         ST    R1,TOTCALL
         TIME  DEC                     GET CURRENT TIME
         ST    R0,LSTTIME              UPDATE TIMESTAMP
         ST    R1,LSTDATE
         L     R9,LLP2XPTR             ADDR OF EXTENSION
         USING LLP2X,R9
         LA    R3,NUMDSNS              LOAD COUNTER
         LA    R7,HDRLEN(R6)           ADDRESS 1ST DSN
FINDDSN  EQU   *
         CLC   DSNAME(4),=C'    '      EMPTY SLOT?
         BE    ADDDSN                  YES, USE IT
         CLC   DSNAME,LLP2XDSN         SAME DATASET?
         BE    UPDDSN                  YES, UPDATE IT
         LA    R7,NXTDSN(R7)           POINT TO NEXT DSN
         BCT   R3,FINDDSN
         B     EXIT                    CAN'T PROCESS, EXIT
*
ADDDSN   EQU   *
         MVC   DSNAME,LLP2XDSN         MOVE IN DSN
         DROP  R9
UPDDSN   EQU   *
         L     R9,LLP2EPTR             POINT TO FIRST ENTRY POINT
         USING LLP2EP,R9
         L     R5,LLP2EPCT             COUNT ENTRY POINTS
NEXTEP   EQU   *
         L     R1,LLP2PFCT             PROGRAM FETCH COUNT
         A     R1,LLP2LFCT             LLA FETCH COUNT
         LTR   R1,R1                   ZERO?
         BZ    BUMP                    YES, IGNORE
         LA    R10,LLP2PDS2            PDS DIRECTORY
         USING PDS2,R10
         LA    R4,NUMMODS              LOAD COUNTER
         LA    R8,DSNLEN(R7)           ADDRESS 1ST MOD
FINDMOD  EQU   *
         CLC   MODNAME(4),=C'    '     EMPTY SLOT?
         BE    ADDMOD                  YES, USE IT
         CLC   MODNAME,PDS2NAME        SAME MODULE?
         BE    UPDMOD                  YES, UPDATE IT
         LA    R8,MODLEN(R8)           POINT TO NEXT DSN
         BCT   R4,FINDMOD
*
         LA    R4,NUMMODS              LOAD COUNTER
         LA    R8,DSNLEN(R7)           ADDRESS 1ST MOD
         L     R1,MODFTCH              PROGRAM FETCH COUNT
         A     R1,MODLLA               LLA FETCH COUNT
         ST    R1,WORK1                INIT FETCH COUNT
         ST    R8,WORK2                INIT MOD ENTRY ADDRESS
FINDMIN  EQU   *
         L     R1,MODFTCH              PROGRAM FETCH COUNT
         A     R1,MODLLA               LLA FETCH COUNT
         C     R1,WORK1                SMALLER
         BNL   FINDMN1                 NO, TRY AGAIN
         ST    R1,WORK1                SAVE NEW MIN COUNT
         ST    R8,WORK2                SAVE ADDRESS OF MOD ENTRY
FINDMN1  EQU   *
         LA    R8,MODLEN(R8)           POINT TO NEXT DSN
         BCT   R4,FINDMIN
         L     R1,LLP2PFCT             PROGRAM FETCH COUNT
         A     R1,LLP2LFCT             LLA FETCH COUNT
         C     R1,WORK1                HIGHER?
         BNH   INCDSN                  NO,  IGNORE
         L     R8,WORK2                YES, OVERLAY ENTRY
         LTR   R8,R8                   MAKE SURE ITS SET
         BZ    INCDSN                  NO GOOD, IGNORE
ADDMOD   EQU   *
         MVC   MODNAME,PDS2NAME        MOVE NAME
         MVC   MODFTCH,=F'0'           FETCH COUNT
         MVC   MODLLA,=F'0'            LOOKASIDE COUNT
UPDMOD   EQU   *
         L     R1,LLP2PFCT             PROGRAM FETCH COUNT
         A     R1,MODFTCH              UPDATE NUMBER FETCHES
         ST    R1,MODFTCH
         L     R1,LLP2LFCT             LOOKASIDE COUNT
         A     R1,MODLLA               UPDATE NUMBER LOOKASIDES
         ST    R1,MODLLA
INCDSN   EQU   *
         L     R1,LLP2PFCT             PROGRAM FETCH COUNT
         A     R1,DSNFTCH              UPDATE NUMBER FETCHES
         ST    R1,DSNFTCH
         L     R1,LLP2LFCT             LOOKASIDE COUNT
         A     R1,DSNLLA               UPDATE NUMBER LOOKASIDES
         ST    R1,DSNLLA
BUMP     EQU   *
         A     R9,LLP2EPLN             POINT TO NEXT ENTRY POINT
         BCT   R5,NEXTEP
         B     EXIT                    ONLY ADD TO DSN COUNTS
         DROP  R9
***********************************************************************
* STANDARD EXIT LINKAGE.                                              *
***********************************************************************
EXIT     EQU   *
         LA    R15,#RCIX2_EVALUATE     LET LLA DECIDE TO STAGE
         LA    R0,#RSIX2_EVALUATE
         L     R14,12(,R13)            RESTORE THE RETURN ADDRESS.
         LM    R1,R12,24(R13)          RESTORE OTHERS EXCEPT R15 AND R0
         BR    R14                     RETURN TO THE CALLER.
         EJECT
***********************************************************************
*        CONSTANTS
***********************************************************************
TBL      DS    0CL256                        TRANSLATE HEX TO DISPLAY
         DC    240C'.'
         DC    CL16'0123456789ABCDEF'
*
WTOMSG1  WTO   'CSVLLIX2 GETMAIN ADDRESS = XXXXXXXXX',                 X
               ROUTCDE=(2),DESC=(4),MF=L
MSG1LEN  EQU   *-WTOMSG1
*
GETMLEN  DC    A(GETLEN)                     LENGTH FOR GETMAIN
         LTORG
         EJECT
***********************************************************************
*        REGISTER ASSIGNMENTS                                         *
***********************************************************************
         SPACE
R0       EQU   0                       Register 0
R1       EQU   1                       Input parameter address
R2       EQU   2                       Register 2
R3       EQU   3                       Register 3
R4       EQU   4                       Register 4
R5       EQU   5                       Register 5
R6       EQU   6                       Register 6
R7       EQU   7                       Register 7
R8       EQU   8                       Code register
R9       EQU   9                       Register 9
R10      EQU   10                      Register 10
R11      EQU   11                      Register 11
R12      EQU   12                      Register 12.
R13      EQU   13                      Save area address
R14      EQU   14                      Return address
R15      EQU   15                      Entry point address at entry,
*                                      return code at exit.
         EJECT
***********************************************************************
*        DSECTS TO DESCRIBE STATISTICS WORKAREA
***********************************************************************
NUMDSNS  EQU   64                      NUMBER DATASETS
NUMMODS  EQU   48                      NUMBER MODULES
GETLEN   EQU   HDRLEN+(NUMDSNS*(DSNLEN+(NUMMODS*MODLEN)))
NXTDSN   EQU   DSNLEN+(NUMMODS*MODLEN) OFFSET TO NEXT DSN
LLEPLEN  EQU   LLP2PDS2-LLP2EP+L'LLP2PDS2 LENGTH OF LLP2EP
*
STATHDR  DSECT                         STATISTICS AREA HEADER
TOTCALL  DS    F                       NUMBER CALLS TO EXIT
LSTDATE  DS    PL4                     DATE LAST INVOCATION
LSTTIME  DS    PL4                     TIME LAST INVOCATION
STATMSG  DS    CL45                    WORK AREA FOR MESSAGE
WORK1    DS    F                       WORK AREA
WORK2    DS    F                       WORK AREA
HDRLEN   EQU   *-STATHDR
*
STATDSN  DSECT                         STATISTICS AREA DATASET DETAIL
DSNAME   DS    CL44                    DATASET NAME
DSNFTCH  DS    F                       NUMBER DISK FETCHES
DSNLLA   DS    F                       NUMBER LLA  FETCHES
DSNLEN   EQU   *-STATDSN
*
STATMOD  DSECT                         STATISTICS AREA MODULE DETAIL
MODNAME  DS    CL8                     DATASET NAME
MODFTCH  DS    F                       NUMBER DISK FETCHES
MODLLA   DS    F                       NUMBER LLA  FETCHES
MODLEN   EQU   *-STATMOD
*
         EJECT
         IHALLP2
         IHAPDS
         END
/*
//L.SYSLMOD DD DSN=SYS1.LINKLIB(CSVLLIX2),DISP=SHR
